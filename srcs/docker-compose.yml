version: "3"

services:

  mariadb:
    build: requirements/MariaDB/
    container_name: mariadb
    restart: always
    env_file:
      - .env
    volumes:
      - /home/mframbou/data/mariadb:/var/lib/mysql
    networks:
      - pouet_network

  nginx:
    build: requirements/Nginx/
    container_name: nginx
    restart: always
    ports:
      - 443:443
      - ${ADMINER_PORT}:8080
    volumes:
      - /home/mframbou/data/wordpress:/var/www/localhost/htdocs/wordpress
      - /home/mframbou/data/static-website:/var/www/localhost/htdocs/website
    depends_on:
      - wordpress
    networks:
      - pouet_network

  wordpress:
    build: requirements/Wordpress/
    container_name: wordpress
    restart: always
    env_file:
      - .env
    volumes:
      - /home/mframbou/data/wordpress:/var/www/html/wordpress
    depends_on:
      - mariadb
      - redis
    networks:
      - pouet_network

  adminer:
    build: requirements/bonus/Adminer/
    container_name: adminer
    restart: always
    networks:
      - pouet_network

  ftp:
    build: requirements/bonus/FTP/
    container_name: ftp
    restart: always
    env_file:
      - .env
    volumes:
      - /home/mframbou/data/wordpress:/home/${FTP_USER}/
    ports:
      - "20:20"
      - "21:21"
      - "${FTP_PASV_MIN_PORT}-${FTP_PASV_MAX_PORT}:${FTP_PASV_MIN_PORT}-${FTP_PASV_MAX_PORT}"
    networks:
      - pouet_network

  # Use redis-client monitor to monitor
  redis:
    build: requirements/bonus/Redis/
    container_name: redis
    restart: always
    volumes: 
      - /home/mframbou/data/redis-cache:/var/lib/redis
    networks:
      - pouet_network

  website:
    build: requirements/bonus/Website/
    container_name: website
    restart: always
    ports:
      - ${STATIC_WEBSITE_PORT}:8080
    volumes:
      - /home/mframbou/data/website:/var/www/html

  minecraft-server:
    build: requirements/bonus/Minecraft-server
    container_name: minecraft-server
    restart: always
    ports:
      - ${MC_SERVER_PORT}:25565
    volumes:
      - /home/mframbou/data/minecraft-server:/var/lib/minecraft-server


# Host-mounted volume: /host/path:/container/path (Binded to the host given path)
# Named volume: named_volume_name:/container/path (Data persists after removing container, accessible by other containers, created in /var/lib/docker/volumes on host)
# Anonymous volume: /container/path/only (After container is removed, data is erased, volume cannot be accessed by another container)

# Networking: https://docs.docker.com/network/ , https://forums.docker.com/t/set-default-network-name-for-compose/36779/2
# Restart: https://docs.docker.com/compose/compose-file/compose-file-v3/#restart

# Dummy network, same as default basically
networks:
  pouet_network: