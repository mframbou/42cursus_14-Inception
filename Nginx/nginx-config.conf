# https://nginx.org/en/docs/http/configuring_https_servers.html

# Https server (should to a http redirecting to https but it isn't asked)
server {

  # 0.0.0.0 Means nginx accepts connections from any ip on port 443
	# Port 443 (same as listen 0.0.0.0:443)
  listen 443 ssl;
  # [::] is ipv6 notation, same as 000000:000000:00000 ...
  listen [::]:443 ssl;

  # Root directory for requests
  root /var/www/localhost/htdocs;

  # SSL certificates for https
  ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
  ssl_protocols       TLSv1.2 TLSv1.3;

  # Only index is index.php in wordpress
  index index.php;

  # Nginx try all locations from longest to shortest, here requests will try to match /var/www/wordpress/$uri
  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.php?$args;
  }

  # pass the PHP scripts to FastCGI server listening on wordpress:9000
  location ~ \.php$ {

    # On wordpress container, root is /var/www/html for Wordpress website
	  root /var/www/html;

    # https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/
		# fastcgi is like CGI V2.0
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass wordpress:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
  }
}



# https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/

# server {
# 	# 0.0.0.0 Means nginx accepts connections from any ip on port 80

# 	# Port 80 (same as listen 0.0.0.0:80)
# 	listen 80 default_server;
# 	# [::] is ipv6 notation, similar to 0000:0000:0000 etc.
# 	listen [::]:80 default_server;

# 	# Root directory for requests
# 	root   /var/www/localhost/htdocs;

# 	# Files will be used as index if no file is requested, checked in order
# 	index  index.php index.html index.htm;

# 	# Nginx try all locations from longest to shortest, here requests will try to match /var/www/wordpress/$uri
# 	location / {
# 		try_files $uri $uri/ /index.php?$query_string;
# 	}

# 	# You may need this to prevent return 404 recursion.
# 	location = /404.html {
# 		internal;
# 	}

# 	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
# 	# ~ Means regular expresion (case sensitive, ~* = case insensitive), here match everything ending in .php
# 	location ~ \.php$ {
# 		# Check if file exists in order, last one is the file if none of the previous is found, can have a code (here 404)
# 		try_files $uri /index.php =404;

# 		# https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/
# 		# fastcgi is like CGI V2.0
# 		fastcgi_split_path_info ^(.+\.php)(/.+)$;
# 		fastcgi_pass   0.0.0.0:9000;
# 		fastcgi_index  index.php;
# 		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
# 		include fastcgi_params;
# 	}

# } 